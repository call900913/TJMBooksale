// const api = "https://api2.isbndb.com"
const api = "https://www.googleapis.com/books/v1/volumes?q="


// Generate a unique token for storing your bookshelf data on the backend server.
// let token = localStorage.token
// if (!token)
  // token = localStorage.token = Math.random().toString(36).substr(-7)
let token = "44179_43ef23392288c0a0d94688c8729d02e3";

const headers = {
  'Content-Type': 'application/json',
  'Authorization': token
};


const availablebooksset = [
  "0880700181",
  "0865543887",

  "9780882703305",
  "9780801035807",
  "0878083766",
  "0802819621",

  "0310364302",

  "0310236487",
  "094357532x",
  "0875525938",

  "0891092897",
  "0310414717",
  "0060649526",
  "0830719385",
  "0878081895",
  "0840741650",

  "0878082069",
  "9781848715554",
  "0883447924",
  "9781581348095",
  "9780801072604",
  "9780825433641",
  "0310225906",
  "1576835073",
  "0976003902",

  "1557482667",
  "0883126516",
  "9780756602611",
  "5911469",

  "1879737337",
  "0875523757",

  "1893531082",
  "9780801012877",
  "0912552654",

  "9780805446272",
  "1879737507",

  "0871230232",

  "0801042194",
  "0801057922",
  "0878083758",
  "09715694",

  "1929122055",
  "0801026075",
  "0891098887",
  "9780878080113",
  "0914936611",
  "0974756296",
  "0802434878",

  "9780801032615",
  "15499979",
  "0878087737",
  "0880700181",
  "0865543887",
  "9780745954370",
  "9780882703305",
  "9780801035807",
  "0878083766",
  "0802819621",
  "0970125216",
  "0310364302",
  "9780310613206",
  "9780310613190",
  "9780310613206",
  "9780310613213",
  "0310236487",
  "094357532x",
  "0875525938",
  "97808029831743",
  "0891092897",
  "0310414717",
  "0060649526",
  "0830719385",
  "0878081895",
  "0840741650",
  "9814001511",
  "0878082069",
  "9781848715554",
  "0883447924",
  "9781581348095",
  "9780801072604",
  "9780825433641",
  "0310225906",
  "1576835073",
  "0976003902",
  "978024333041",
  "1557482667",
  "0883126516",
  "9780756602611",
  "5911469",
  "9781569630165",
  "1879737337",
  "0875523757",
  "978030275114",
  "1893531082",
  "9780801012877",
  "0912552654",
  "978184887237",
  "9780805446272",
  "1879737507",
  "0842388036",
  "0871230232",
  "009998979587654321",
  "0801042194",
  "0801057922",
  "0878083758",
  "09715694",
  "857927877",
  "1929122055",
  "0801026075",
  "9780878080113",
  "0914936611",
  "0974756296",
  "0802434878",
  "08549930073",
  "9780801032615",
  "15499979",
  "0878087737",
  "0925703435",
  "0875522580",
  "1586609777",
  "1884543170",
  "0851516920",
  "802812368",
  "9781590521953",
  "0851515959",
  "9780785262565",
  "1883689596",
  "0687085853",
  "0883689596",
  "0060677015",
  "0802494986",
  "0802811434",
  "0060657790",
  "97803310287551",
  "0310521718",
  "9781433503634",
  "0891098887",
  "9781565638327",
  "1881095002",
  "0875523595",
  "9780800733759",
  "0976003945",
  "9780830828319",
  "9781857926286",
  "0891099409",
  "9780949906625",
  "0802816541",
  "9781595890016",
  "0842353607",
  "1567316786",
  "1857928784",
  "9781884377167",
  "0802843506",
  "08826400111",
  "0849902444",
  "0825431654",
  "9781935273813",
  "2598631180",
  "004w96x",
  "9781933339092",
  "9781933339139",
  "9780802825056",
  "9780310613213",
  "9781617479229",
  "0976079127",
  "1573580287",
  "0602877052",
  "0825428793",
  "9781879737693",
  "0825427703",
  "0830826114",
  "0830726535",
  "0802836208",
  "0310208092",
  "0878087192",
  "0878083782",
  "087808288x",
  "1570752591",
  "0878082042",
  "1403969094",
  "0801020689",
  "1570753733",
  "9780883443613",
  "087552124X",
  "080801057847",
  "082543159X",
  "02532913",
  "24840",
  "0941717062",
  "0878083820",
  "0385029306",
  "1892777223",
  "9780875521442",
  "0006530095",
  "0878083774",
  "1573580996",
  "0830822399",
  "088312176X",
  "0801022495",
  "0802811442",
  "9780830834440",
  "1591280001",
  "0852345291",
  "1570754934",
  "0825427487",
  "0800625765",
  "9780880620741",
  "080241544x",
  "0878083790",
  "0878083855",
  "1556617259",
  "0938289519",
  "0836136101",
  "0830813365",
  "0875523986",
  "0878281186",
  "1857922697",
  "1842270427",
  "9780830833788",
  "0891091912",
  "0913552518",
  "872981207",
  "085151216x",
  "0851512178",
  "9781570757730",
  "0967831709",
  "0940232367",
  "0875522041",
  "0852344619",
  "9781596381100",
  "0801011124",
  "9780830853694",
  "9781842275542",
  "1932805567",
  "0851119972",
  "9780801030857",
  "0962485012",
  "084235266X",
  "088312176X",
  "0941717062",
  "085151295X",
  "0805410759",
  "9781596380035",
  "0925703397",
  "080106211X",
  "0785212310",
  "0801022495",
  "9781435114982",
  "0801022193",
  "0312396066",
  "545229",
  "1591280001",
  "0877882592",
  "1573580287",
  "9780830842063",
  "9780618187584",
  "9781891400162",
  "1403969094",
  "9781848710085",
  "1400071089",
  "1893531082",
  "1567316786",
  "02598628901",
  "1884543979",
  "9780801026874",
  "9780852343005",
  "1885767706",
  "0825428912",
  "0800793722",
  "1885767250",
];

const availablebooks = [...new Set(availablebooksset)];

export const get = (bookId) =>
  fetch(api + bookId, { method: "GET" })
    .then(res => res.json())
    .then(data => data.items[0])

export const getAll = function() {
  // let results = [];
  // // for loop
  // for (let i = 0; i < arr.length; i++) {
  //   let book = get(arr[i]);
  //   results.push(book);
  // };
  return availablebooks;
}

//
// export const getAll = () =>
//   fetch(`${api}/books`, { headers })
//     .then(res => res.json())
//     .then(data => data.books)

export const update = (book, shelf) =>
  fetch(`${api}/books/${book.id}`, {
    method: 'PUT',
    headers: {
      ...headers,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ shelf })
  }).then(res => res.json())


export const search = (query, maxResults) =>
  fetch(`${api}/search`, {
    method: 'POST',
    headers: {
      ...headers,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ query, maxResults })
  }).then(res => res.json())
    .then(data => data.books)


/**



**/
